"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Action_1 = require("./Action");
var BlisModels_1 = require("./BlisModels");
var ModelUtils = (function () {
    function ModelUtils() {
    }
    /** Remove n words from start of string */
    ModelUtils.RemoveWords = function (text, numWords) {
        var firstSpace = text.indexOf(' ');
        var remaining = (firstSpace > 0) ? text.slice(firstSpace + 1) : "";
        numWords--;
        if (numWords == 0) {
            return remaining;
        }
        return this.RemoveWords(remaining, numWords);
    };
    /** Return arguments for an action */
    ModelUtils.GetArguments = function (action) {
        if (action.metadata && action.metadata.actionType != Action_1.ActionTypes.TEXT) {
            var argString = this.RemoveWords(action.payload, 1);
            return argString.split(',');
        }
        return null;
    };
    /** Return arguments for an action */
    ModelUtils.GetPrimaryPayload = function (action) {
        if (action.metadata && action.metadata.actionType != Action_1.ActionTypes.TEXT) {
            var apiName = action.payload.split(' ')[0];
            return apiName;
        }
        return action.payload;
    };
    //====================================================================
    // CONVERSION: LabeledEntity == PredictedEntity
    //====================================================================
    ModelUtils.ToLabeledEntity = function (predictedEntity) {
        var labelEntity = new BlisModels_1.LabeledEntity({
            startCharIndex: predictedEntity.startCharIndex,
            endCharIndex: predictedEntity.endCharIndex,
            entityId: predictedEntity.entityId,
            entityName: predictedEntity.entityName,
            entityText: predictedEntity.entityText
        });
        return labelEntity;
    };
    ModelUtils.ToLabeledEntities = function (predictedEntities) {
        var labeledEntities = [];
        for (var _i = 0, predictedEntities_1 = predictedEntities; _i < predictedEntities_1.length; _i++) {
            var predictedEntity = predictedEntities_1[_i];
            var labelEntity = ModelUtils.ToLabeledEntity(predictedEntity);
            labeledEntities.push(labelEntity);
        }
        return labeledEntities;
    };
    ModelUtils.ToPredictedEntity = function (labeledEntity) {
        var predictedEntity = new BlisModels_1.PredictedEntity({
            startCharIndex: labeledEntity.startCharIndex,
            endCharIndex: labeledEntity.endCharIndex,
            entityId: labeledEntity.entityId,
            entityName: labeledEntity.entityName,
            entityText: labeledEntity.entityText
        });
        return predictedEntity;
    };
    ModelUtils.ToPredictedEntities = function (labeledEntities) {
        var predictedEntities = [];
        for (var _i = 0, labeledEntities_1 = labeledEntities; _i < labeledEntities_1.length; _i++) {
            var labeledEntity = labeledEntities_1[_i];
            var predictedEntity = ModelUtils.ToPredictedEntity(labeledEntity);
            predictedEntities.push(predictedEntity);
        }
        return predictedEntities;
    };
    //====================================================================
    // CONVERSION: ExtractResponse == TextVariation 
    //====================================================================
    ModelUtils.ToTextVariation = function (extractResponse) {
        var labeledEntities = this.ToLabeledEntities(extractResponse.predictedEntities);
        var textVariation = new BlisModels_1.TextVariation({
            text: extractResponse.text,
            labelEntities: labeledEntities
        });
        return textVariation;
    };
    ModelUtils.ToExtractResponses = function (textVariations) {
        var extractResponses = [];
        for (var _i = 0, textVariations_1 = textVariations; _i < textVariations_1.length; _i++) {
            var textVariation = textVariations_1[_i];
            var predictedEntities = this.ToPredictedEntities(textVariation.labelEntities);
            var extractResponse = new BlisModels_1.ExtractResponse({
                text: textVariation.text,
                predictedEntities: predictedEntities
            });
            extractResponses.push(extractResponse);
        }
        return extractResponses;
    };
    ModelUtils.ToTextVariations = function (extractResponses) {
        var textVariations = [];
        for (var _i = 0, extractResponses_1 = extractResponses; _i < extractResponses_1.length; _i++) {
            var extractResponse = extractResponses_1[_i];
            var labelEntities = this.ToLabeledEntities(extractResponse.predictedEntities);
            var textVariation = new BlisModels_1.TextVariation({
                text: extractResponse.text,
                labelEntities: labelEntities
            });
            textVariations.push(textVariation);
        }
        return textVariations;
    };
    //====================================================================
    // CONVERSION: LogDialog == TrainDialog
    //====================================================================
    ModelUtils.ToTrainDialog = function (logDialog) {
        var trainRounds = [];
        for (var _i = 0, _a = logDialog.rounds; _i < _a.length; _i++) {
            var logRound = _a[_i];
            var trainRound = ModelUtils.ToTrainRound(logRound);
            trainRounds.push(trainRound);
        }
        return new BlisModels_1.TrainDialog({
            rounds: trainRounds
        });
    };
    //====================================================================
    // CONVERSION: LogRoung == TrainRound
    //====================================================================
    ModelUtils.ToTrainRound = function (logRound) {
        return new BlisModels_1.TrainRound({
            extractorStep: new BlisModels_1.TrainExtractorStep({
                textVariations: [new BlisModels_1.TextVariation({
                        labelEntities: ModelUtils.ToLabeledEntities(logRound.extractorStep.predictedEntities),
                        text: logRound.extractorStep.text
                    })],
            }),
            scorerSteps: logRound.scorerSteps.map(function (scorerStep) { return new BlisModels_1.TrainScorerStep({
                input: scorerStep.input,
                labelAction: scorerStep.predictedAction,
            }); })
        });
    };
    //====================================================================
    // CONVERSION: LogScorerStep == TrainScorerStep
    //====================================================================
    ModelUtils.ToTrainScorerStep = function (logScorerStep) {
        return new BlisModels_1.TrainScorerStep({
            input: logScorerStep.input,
            labelAction: logScorerStep.predictedAction,
        });
    };
    return ModelUtils;
}());
exports.ModelUtils = ModelUtils;
//# sourceMappingURL=ModelUtils.js.map