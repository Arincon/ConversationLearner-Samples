import * as builder from 'botbuilder';
import { BlisMemory } from '../BlisMemory';
import { BlisAppBase } from 'blis-models';
export declare class BotState {
    private static _instance;
    private static MEMKEY;
    memory: BlisMemory;
    appId: string;
    sessionId: string;
    inTeach: boolean;
    inDebug: boolean;
    address: string;
    private constructor();
    static Get(blisMemory: BlisMemory): BotState;
    private Init();
    private GetSync(cb);
    private Deserialize(text);
    private Serialize();
    private Set();
    Clear(appId: string): Promise<void>;
    App(): Promise<BlisAppBase>;
    SetApp(blisApp: BlisAppBase): Promise<void>;
    SessionId(): Promise<string>;
    SetSession(sessionId: string, inTeach: boolean): Promise<void>;
    InTeach(): Promise<boolean>;
    InTeachSync(cb: (err: any, inTeach: boolean) => void): void;
    InDebug(): Promise<boolean>;
    SetInDebug(isTrue: boolean): Promise<void>;
    SetAddress(address: builder.IAddress): Promise<void>;
    Address(): Promise<builder.IAddress>;
    Session(bot: builder.UniversalBot): Promise<any>;
}
